int main()
{
	int i = 0;
	unsigned char c = 0;
	char b = 0;
	c = 0;
	c = -1;

	b = 255;
	// 양수 unsigned signed:양/음수
	// 종수형 : char(1), short(2), int(4), long(4), long long(4)
	// 실수형 : float(4), double(8)

	// 1bit
	// 1byte = 8bit
	// 1kb = 1024byte = 2^10
	// 1mb = 1024kb
	// 1gb = 1024mb
	// 1tb = 1024 gb
	// 음의 정수 찾기(2의 보수법) 1111 1110
	//부호반전후 1을 더한다          0000 0010

	/*실수의 표현방식 우리가 아는 실수의 개념은 1과0사이에도 무한한 수들이 있다
	* 하지만 현실적으로 메모리 제한이 있는 한계 때문에 부동소수점을 이용해 표현한다.
	* 정수와 실수는 표현방식이 다르다는 점을 인지할 것 그래서 변수를 설정할때 사용자는 
	* 정수또는 실수로 통합해줘야 한다. 이는 데이터 처리 방식이 다르기 때문이다.
	*/

	int a = 4 + 4.0;
	/*위의 예시처럼 정수와 실수로 연산할 경우 현제 자료형이 정수형이니 실수형이 
	정수로 바뀌는 형변환 연산이 눈에 보이지 않지만 작동하고 있다. 의도한 경우가 아니라면
	이런 메모리 낭비를 	없애기 위해서 변수 수치는 통합하는 것이 좋다*/
	/*부동소수점	부호, 지수, 기수로 나뉜다.*/
	/*실수를 이용할 때 정밀도를 조심해야 한다*/
	/*만약 두 표현방식의 피 연산자가 연산될 겨웅 명시적으로 변환하자*/
	float f = 10.2415f + (float)20;

	return 0;
}